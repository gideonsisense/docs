<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" MadCap:lastBlockDepth="4" MadCap:lastHeight="3855" MadCap:lastWidth="1133">
    <head>
        <title>Connecting to Gmail | Sisense | Documentation</title>
    </head>
    <body>
        <h1>Connecting to Gmail</h1>
        <p>The <MadCap:variable name="Variables.CompanyName"></MadCap:variable> Gmail connector is a standalone connector that allows you to import data from Gmail’s API into the <MadCap:variable name="Variables.ECM"></MadCap:variable>. After you have downloaded and installed the connector, you can connect through a connection string you provide <MadCap:variable name="Variables.CompanyName"></MadCap:variable> in the <MadCap:variable name="Variables.ECM"></MadCap:variable>. The connection string is used to authenticate users who connect to the Gmail APIs. To obtain a connection string, you will need to register a Gmail app.</p>
        <p>Once you have connected to Gmail, you can import a variety of tables from the Gmail API.</p>
        <p>This page describes how to install the Gmail connector, how to connect to Gmail with a connection string, and what tables you can import into the <MadCap:variable name="Variables.ECM"></MadCap:variable>:</p>
        <ul>
            <li>
                <a href="#Installi">Installing the Gmail Connector</a>
            </li>
            <li>
                <a href="#Connecti">Connecting to the Gmail REST API</a>
            </li>
            <li>
                <a href="#Adding">Adding Gmail Tables to your <MadCap:variable name="Variables.ElastiCube" /></a>
            </li>
            <li>
                <a href="#Gmail">Gmail Tables</a>
            </li>
            <li>
                <a href="#Limitati">Limitations</a>
            </li>
        </ul>
        <h2 class="notoc">
            <a name="Installi">
            </a>Installing the Gmail Connector</h2>
        <p>
            <MadCap:variable name="Variables.CompanyName">
            </MadCap:variable> provides the Gmail connector as a standalone connector that you can download and add to your list of default <MadCap:variable name="Variables.CompanyName"></MadCap:variable> connectors.</p>
        <p class="bold">To install the Gmail connector:</p>
        <ol>
            <li>
                <a href="http://data.sisense.com/connectors/jvm/latest/release/Gmail.Connector.Installer.exe">Download</a> the Gmail installation file.</li>
            <li>Open the installation file and click <span class="bold">Install</span>.</li>
            <li>After the installation process is complete, click <span class="bold">Close</span>.</li>
        </ol>
        <p class="indent">The Gmail connector is displayed in the <MadCap:variable name="Variables.ECM"></MadCap:variable> under <span class="bold">Add Data</span> &gt; <span class="bold">Web Services</span>.</p>
        <h2 class="notoc">
            <a name="Connecti">
            </a>Connecting to the Gmail REST API</h2>
        <p>To access Gmail’s REST API from the <MadCap:variable name="Variables.ECM"></MadCap:variable>, you must provide valid Oauth Gmail credentials through a connection string. These credentials are provided by Gmail when you register an application.</p>
        <p>After you receive your credentials from Gmail, you can create the connection string and provide <MadCap:variable name="Variables.CompanyName"></MadCap:variable> with it to connect to your data.</p>
        <h3 class="notoc">Registering an App</h3>
        <p>Follow the steps below to obtain the OAuth client credentials, the OAuthClientId and OAuthClientSecret necessary for your connection string:</p>
        <ol>
            <li>Log into the Google API Console.</li>
            <li>Click <span class="bold">Create Project</span> or select an existing project.</li>
            <li>In the API Manager, click <span class="bold">Credentials</span> &gt; <span class="bold">Create Credentials</span> &gt; <span class="bold">OAuth Client Id</span>.</li>
            <li>Select the application type.If you are making a Web application, select Web application. In the Authorized Redirect URIs box, enter the URL you want to be used as a trusted redirect URL, where the user will return with the token that verifies that they have granted your app access. If you are making a desktop application, select Other.</li>
            <li>Click <span class="bold">Create</span>. The OAuthClientId and OAuthClientSecret are displayed.</li>
            <li>Click <span class="bold">Library</span> &gt; <span class="bold">Gmail API</span> &gt; <span class="bold">Enable API</span>.</li>
        </ol>
        <p>&#160;</p>
        <h3 class="notoc">
            <a name="Adding">
            </a>Adding Gmail Tables to your ElastiCube</h3>
        <p>
            <MadCap:variable name="Variables.CompanyName" /> uses connection strings to connect to Gmail and import data into the <MadCap:variable name="Variables.ECM" />.</p>
        <p>The connection string to connect to Gmail has the following structure:</p>
        <p class="code">jdbc:Gmail:Property1=Value1;Property2=Value2;</p>
        <p>The following is an example of a Gmail connection string:</p>
        <p class="code">jdbc:gmail:<span class="bold">user</span>=xxxx@xxxxx.com;<span class="bold">InitiateOAuth</span>=GETANDREFRESH;<span class="bold">OAuthClientId</span><br />=xxxxxxxxxxxxxxxxxxxxxxxx;<span class="bold">OAuthClientSecret</span>=xxxxxxxxxxxxxxxxxxxxxxxx;</p>
        <p>The connection string should include the following information:&#160;</p>
        <ul>
            <li>
                <span class="bold">InitiateOAuth</span>: Set this to GETANDREFRESH. You can use InitiateOAuth to avoid repeating the OAuth exchange and manually setting the OAuthAccessToken connection property.</li>
            <li>
                <span class="bold">OAuthClientId</span>: Set this to the Client ID in your app settings.</li>
            <li>
                <span class="bold">OAuthClientSecret</span>: Set this to the Client secret in your app settings.</li>
            <li>
                <span class="bold">User</span>: Set this to the user of the Gmail account.</li>
        </ul>
        <p>When you connect the driver opens the OAuth endpoint in your default browser. Log in and grant permissions to the application. </p>
        <p>
            <span class="bold">Note</span>: To switch between accounts, you need to delete the file OAuthsettings.txt file located at …\Users\xxx\AppData\Roaming\CData\Gmail Data Provider.</p>
        <p>&#160;</p>
        <p class="bold">To add Gmail data:</p>
        <ol>
            <li>In <MadCap:variable name="Variables.ECM" />, click <span class="bold">Add Data</span> and then, Gmail. The Connect to Gmail window is displayed.</li>
            <li>In <span class="bold">Datasource Connection String</span>, enter your connection string.</li>
            <li>Click <span class="bold">Connect to Server</span>. Gmail is displayed in the Select Database list.</li>
            <li>Click <span class="bold">OK</span>. <MadCap:variable name="Variables.CompanyName" /> connects to Gmail and displays a list of tables available for you to import.</li>
            <li>Select the relevant tables and click <span class="bold">Add</span>. The tables are displayed in the <MadCap:variable name="Variables.ECM" />.</li>
        </ol>
        <h3 class="notoc">Switching between Accounts</h3>
        <p>When you connect to the Gmail data source, Sisense saves your OAuth values in the file OAuthsettings.txt file located at …\Users\xxx\AppData\Roaming\CData\Gmail Data Provider on your Sisense server. To connect to the Gmail data source with another user on the same machine, you must delete the OAuthsettings.txt file. Sisense will then generate a new file for that user.</p>
        <p>Another option to support multiple users is to define the location and file name of an OAuthsettings file for each unique user in your connection string through the <span class="bold">OAuthSettingsLocation</span> parameter. When each user connects to the data source, Sisense generates the OAuth file with the file name you specify in the location you define. In the examples below, two users are allowed to access the Gmail data source and for each user, Sisense generates a file that contains that user’s OAuth values in the location defined in the string.</p>
        <p class="code">jdbc:Gmail:OAuthSettingsLocation=C:\Gmail\auth\john.txt;OAuthClientId=11276856774486;OAuthClientSecret</p>
        <p class="code">=064c70d78567jm2b7e7e4224fad;InitiateOAuth=GETANDREFRESH;Version=2.8;CallbackURL=http://localhost/;</p>
        <p class="code">jdbc:Gmail:OAuthSettingsLocation=C:\Gmail\auth\sally.txt;OAuthClientId=11276856774486;OAuthClientSecret</p>
        <p class="code">=064c70d78567jm2b7e7e4224fad;InitiateOAuth=GETANDREFRESH;Version=2.8;CallbackURL=http://localhost/;</p>
        <p>In the example above, to OAuth files are created, one for John and one for Sally in the location C:\Gmail\auth\.</p>
        <p>This is useful if you support many users who each need to access the Gmail data source.</p>
        <h3 class="notoc">
            <a name="Gmail">
            </a>Gmail Tables</h3>
        <p>Gmail’s RESTful APIs expose the following Gmail tables that you can import into the <MadCap:variable name="Variables.ECM" /> through the <MadCap:variable name="Variables.CompanyName" /> Gmail connector:</p>
        <ul>
            <li>Gmail/All Mail</li>
            <li>Gmail/Drafts</li>
            <li>Gmail/Important</li>
            <li>Gmail/Sent Mail</li>
            <li>Gmail/Spam</li>
            <li>Gmail/Starred</li>
            <li>Gmail/Trash</li>
            <li>Inbox</li>
            <li>Test Label</li>
        </ul>
        <h3 class="notoc">
            <a name="Limitati">
            </a>Limitations</h3>
        <ul>
            <li>The default Gmail table names contain a backslash; some also contain spaces. You can use square brackets to escape the table names for the default Gmail folders.</li>
            For example:
			<span class="code">SELECT * FROM [Gmail/All Mail]
</span><li>The default number of messages returned is 100. This can be changed by setting either LIMIT or MaxItems. If you wish to return all mail within a mailbox, specify a value of 0 or -1.</li><li>Aggregate functions not supported.</li></ul>
    </body>
</html>