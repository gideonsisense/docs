<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
    <head><title>Connecting to YouTube | Sisense | Documentation</title>
    </head>
    <body>
        <h1>Connecting to YouTube</h1>
        <p>The <MadCap:variable name="Variables.CompanyName" /> YouTube connector is a standalone connector that allows you to import data from the YouTube API into the <MadCap:variable name="Variables.ECM" />. After you have downloaded and installed the connector, you can connect to the YouTube API through a connection string you provide <MadCap:variable name="Variables.CompanyName" />in the <MadCap:variable name="Variables.ECM" />. The connection string is used to authenticate users who connect to YouTube’s API. To obtain a connection string, you will need to create a YouTube app.</p>
        <p>Once you have connected to YouTube, you can import a variety of tables from the YouTube API.</p>
        <p>This page describes how to install the YouTube connector, how to connect to YouTube with a connection string, and what tables you can import into the <MadCap:variable name="Variables.ECM" />:</p>
        <ul>
            <li><a href="#Installi">Installing the YouTube Connector</a>
            </li>
            <li><a href="#Connecti">Connecting to the YouTube REST API</a>
            </li>
            <li><a href="#Adding">Adding YouTube Tables to your <MadCap:variable name="Variables.ElastiCube" /></a>
            </li>
            <li><a href="#YouTube">YouTube Tables</a>
            </li>
            <li><a href="#Versions">Versions</a>
            </li>
        </ul>
        <h2 class="notoc"><a name="Installi"></a>Installing the YouTube Connector</h2>
        <p><MadCap:variable name="Variables.CompanyName" /> provides the YouTube connector as a standalone connector that you can download and add to your list of default <MadCap:variable name="Variables.CompanyName" /> connectors.</p>
        <p class="bold">To install the YouTube connector:</p>
        <ol>
            <li><a href="http://data.sisense.com/connectors/jvm/latest/release/Youtube.Connector.Installer.exe">Download</a> the YouTube installation file.</li>
            <li>Open the installation file and click <span class="bold">Install</span>.</li>
            <li>After the installation process is complete, click <span class="bold">Close</span>.</li>
            <li>The YouTube connector is displayed in the <MadCap:variable name="Variables.ECM" /> under <span class="bold">Add Data</span> &gt; <span class="bold">Web Services</span>.</li>
        </ol>
        <p>
            <img src="../../../Resources/Images/youtube1.png" class="thumblargeli" />
        </p>
        <h2 class="notoc"><a name="Connecti"></a>Connecting to the YouTube REST API</h2>
        <p>To access YouTube’s REST API from the <MadCap:variable name="Variables.ECM" />, you must provide valid Oauth YouTube credentials through a connection string. These credentials are provided by YouTube when you create an application.</p>
        <p>After you receive your credentials from YouTube, you can create the connection string and provide <MadCap:variable name="Variables.CompanyName" /> with it to connect to your data.</p>
        <h3 class="notoc">Creating an App</h3>
        <p>You can follow the procedure below to register an app and obtain the OAuth client credentials, the OAuthClientId and OAuthClientSecret:</p>
        <ol>
            <li>Log in to the <a href="https://console.developers.google.com/flows/enableapi?apiid=picker&amp;credential=client_key&amp;pli=1">Google Developers Console</a>.</li>
            <li>Click <span class="bold">Create Project</span> or select an existing project.<br /><img src="../../../Resources/Images/youtubeapi.png" class="thumblarge" /></li>
            <li>In the API Manager, click <span class="bold">Credentials</span> &gt; <span class="bold">Create Credentials</span> &gt; <span class="bold">OAuth Client Id</span>.<br /><img src="../../../Resources/Images/youtubeapi1.png" class="thumblarge" /></li>
            <li>Click <span class="bold">Configure Consent Screen</span> to customize the information displayed to users when they connect.<br /><img src="../../../Resources/Images/youtubeapi21-768x181.png" class="thumblarge" /></li>
            <li>If you are connecting from a desktop application, click <span class="bold">Other</span> in the Application Type section. If you are connecting from a Web application, click the Web Application option. In the Authorized Redirect URIs box, enter the URL you want to be used as a trusted redirect URL, where the user will return with the token that verifies that they have granted your app access.</li>
            <li>Click <span class="bold">Create</span>. The OAuthClientId and OAuthClientSecret are displayed. Save these credentials as they need to be passed to YouTube in the connection string when importing data into the <MadCap:variable name="Variables.ECM" />.<br /><img src="../../../Resources/Images/youtubeapi31.png" class="thumblarge" /></li>
            <li>Click <span class="bold">OK</span>.</li>
            <li>Select <span class="bold">Library</span> &gt; <span class="bold">YouTube Data API</span>.<br /><img src="../../../Resources/Images/youtubeapi4-768x407.png" class="thumblarge" /></li>
            <li>Click <span class="bold">Enable</span>.<br /><img src="../../../Resources/Images/youtubeapi5-768x409.png" class="thumblarge" /></li>
        </ol>
        <h3 class="notoc">Creating a Connection String</h3>
        <p><MadCap:variable name="Variables.CompanyName" /> uses connection strings to connect to YouTube and import data into the ElastiCube Manager. Each connection string contains authentication parameters that the data source uses to verify your identity and what information you can export to <MadCap:variable name="Variables.CompanyName" />.</p>
        <p><span class="bold">Note</span>: When switching accounts, you must sign out of your account and then sign it with the new account.</p>
        <p>After you have obtained the relevant credentials, you can create the connection used to connect to your YouTube account. The YouTube connection string has the following structure:</p>
        <p class="code">jdbc:DataSourceName:Property1=Value1;Property2=Value2;</p>
        <p>The following is an example of a YouTube connection string:</p>
        <p class="code">jdbc:youtube:OAuthClientId=112345383774486;OAuthClientSecret=064c524478d712534b7e7e4224fad;</p>
        <p class="code">InitiateOAuth=GETANDREFRESH;Version=2.10;CallbackURL=http://localhost/33333;</p>
        <p>The example above includes mandatory parameters you can provide in the connection. The required parameters are emphasized in bold.</p>
        <p class="bold">Mandatory Parameters</p>
        <ul>
            <li><span class="bold">InitiateOAuth</span>: Set this to GETANDREFRESH. You can use InitiateOAuth to avoid repeating the OAuth exchange and manually setting the OAuthAccessToken connection property.</li>
            <li><span class="bold">OAuthClientId</span>: Set this to the Client Id.</li>
            <li><span class="bold">OAuthClientSecret</span>: Set this to the Client Secret.</li>
            <li><span class="bold">CallbackURL</span>: Set this to http://localhost.</li>
        </ul>
        <p>Alternatively, you can keep the OAuthClientId and the OAuthClientSecret parameters empty to redirect your users to the YouTube authentication page where they can log in to their accounts to access their tables without creating a YouTube app.</p>
        <h3 class="notoc">Switching between Accounts</h3>
        <p>When you connect to the YouTube data source, <MadCap:variable name="Variables.CompanyName" /> saves your OAuth values in the file OAuthsettings.txt file located at …\Users\xxx\AppData\Roaming\CData\YouTube Data Provider on your <MadCap:variable name="Variables.CompanyName" /> server. To connect to the YouTube data source with another user on the same machine, you must delete the OAuthsettings.txt file. <MadCap:variable name="Variables.CompanyName" /> will then generate a new file for that user.</p>
        <p>Another option to support multiple users is to define the location and file name of an OAuthsettings file for each unique user in your connection string through the OAuthSettingsLocation parameter. When each user connects to the data source, <MadCap:variable name="Variables.CompanyName" /> generates the OAuth file with the file name you specify in the location you define. In the examples below, two users are allowed to access the YouTube data source and for each user, Sisense generates a file that contains that user’s OAuth values in the location defined in the string.</p>
        <p class="code">jdbc:youtube:OAuthSettingsLocation=C:\youtube\auth\john.txt;OAuthClientId=11276856774486;OAuthClientSecret</p>
        <p class="code">=064c70d78567jm2b7e7e4224fad;InitiateOAuth=GETANDREFRESH;Version=2.8;CallbackURL=http://localhost/33333;</p>
        <p class="code">jdbc:youtube:OAuthSettingsLocation=C:\youtube\auth\sally.txt;OAuthClientId=11276856774486;OAuthClientSecret</p>
        <p class="code">=064c70d78567jm2b7e7e4224fad;InitiateOAuth=GETANDREFRESH;Version=2.8;CallbackURL=http://localhost/33333;</p>
        <p>In the example above, to OAuth files are created, one for John and one for Sally in the location C:\youtube\auth\.</p>
        <p>This is useful if you support many users who each need to access the YouTube data source.</p>
        <p>If you have any problems connecting to your data source, see <a href="https://support.sisense.com/hc/en-us/community/posts/360013657533-Troubleshooting-JDBC-Data-Connectors?flash_digest=bb409caea6311b2ed547437d608be67bdab8187d">Troubleshooting JDBC Data Connectors</a>.</p>
        <h2 class="notoc"><a name="Adding"></a>Adding YouTube Tables to your <MadCap:variable name="Variables.ElastiCube" /></h2>
        <p><MadCap:variable name="Variables.CompanyName" /> uses connection strings to connect to YouTube and import data into the <MadCap:variable name="Variables.ECM" />. Each connection string contains a authentication parameters that the data source uses to verify your identity and what information you can export to <MadCap:variable name="Variables.CompanyName" />.</p>
        <p class="bold">To add YouTube data:</p>
        <ol>
            <li>In <MadCap:variable name="Variables.ECM" />, click <span class="bold">Add Data</span> and then, <span class="bold">YouTube</span>. The Connect to YouTube window is displayed.<br /><img src="../../../Resources/Images/youtube3.png" class="thumblarge" /></li>
            <li>In <span class="bold">Datasource Connection String</span>, enter your connection string.</li>
            <li>Click <span class="bold">Connect to Server</span>. YouTube is displayed in the Select Database list.</li>
            <li>Click <span class="bold">OK</span>. Sisense connects to YouTube and displays a list of tables available for you to import.</li>
            <li>Select the relevant tables and click <span class="bold">Add</span>.<br />The tables are displayed in the <MadCap:variable name="Variables.ECM" />.</li>
        </ol>
        <h2 class="notoc"><a name="YouTube"></a>YouTube Tables</h2>
        <p>The <MadCap:variable name="Variables.CompanyName" /> YouTube connector allows you to import the following tables into the <MadCap:variable name="Variables.ECM" />.</p>
        <table>
            <thead>
                <tr>
                    <th>Name</th>
                    <th>Description</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td>Activities</td>
                    <td>Query YouTube Activities. An Activity resource contains information about an action that a particular Channel, or User, has taken on YouTube.</td>
                </tr>
                <tr>
                    <td>Captions</td>
                    <td>Query YouTube Captions. A Caption resource represents a YouTube caption track.</td>
                </tr>
                <tr>
                    <td>Channels</td>
                    <td>Query YouTube Channels.</td>
                </tr>
                <tr>
                    <td>ChannelSections</td>
                    <td>Query YouTube ChannelSections. A ChannelSection contains information about a set of videos that a channel has chosen to feature.</td>
                </tr>
                <tr>
                    <td>Comments</td>
                    <td>Query YouTube Comments.</td>
                </tr>
                <tr>
                    <td>CommentThreads</td>
                    <td>Query YouTube CommentThreads. A CommentThread record contains information about a YouTube comment thread, a top-level comment and replies, if any exist, to that comment.</td>
                </tr>
                <tr>
                    <td>GuideCategories</td>
                    <td>Query YouTube GuideCategories. A GuideCategory resource identifies a category that YouTube algorithmically assigns based on a content of a channel or other indicators, such as the popularity of the channel.</td>
                </tr>
                <tr>
                    <td>Languages</td>
                    <td>Query YouTube i18nLanguages. An i18nLanguage resource identifies an application language that the YouTube website supports. The application language can also be referred to as a UI language.</td>
                </tr>
                <tr>
                    <td>PlayListItems</td>
                    <td>Query YouTube PlayListItems. A PlayListItem resource identifies another YouTube entity, such as a Video, that is included in a PlayList. In addition, the PlayListItem record contains details about how that entity is used in that PlayList.</td>
                </tr>
                <tr>
                    <td>PlayLists</td>
                    <td>Query YouTube PlayLists. A PlayList is a collection of videos that can be viewed sequentially and shared with other users.</td>
                </tr>
                <tr>
                    <td>Regions</td>
                    <td>Query YouTube i18nRegions. An i18nRegion resource identifies a geographic area that a YouTube user can select as the preferred content region. The content region can also be referred to as a content locale.</td>
                </tr>
                <tr>
                    <td>Subscriptions</td>
                    <td>Query YouTube User Subscriptions. A Subscription notifies a User when new Videos are added to a Channel, or when another user takes one of several actions on YouTube, such as uploading a Video, rating a Video, or commenting on a Video.</td>
                </tr>
                <tr>
                    <td>VideoAbuseReportReasons</td>
                    <td>Query YouTube VideoAbuseReportReasons. A VideoAbuseReportReason resource contains information about a reason that a Video would be flagged for containing abusive content.</td>
                </tr>
                <tr>
                    <td>VideoCategories</td>
                    <td>Query YouTube VideoCategories. A VideoCategory resource identifies a category that has been or could be associated with uploaded Videos.</td>
                </tr>
                <tr>
                    <td>Videos</td>
                    <td>Query YouTube Videos.</td>
                </tr>
            </tbody>
        </table>
        <h3 class="notoc"><a name="Versions"></a>Versions</h3>
        <table>
            <thead>
                <tr>
                    <th>Version</th>
                    <th>Release Date</th>
                    <th>Improvements</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td>6.6.1.72</td>
                    <td>June 20, 2017</td>
                    <td>Support added for retrieving all videos based on channel SELECT * FROM Videos WHERE ChannelId IN (SELECT Id FROM Channels)Many of the tables have been updated to include additional inputs such as OnBehalfOfContentOwner (string) and ForContentOwner (boolean).</td>
                </tr>
                <tr>
                    <td>6.6.0.44</td>
                    <td>March 16, 2017</td>
                    <td>PublishedAt column presented correctlyViews are now more readable with important fields reordered and unnecessary fields removed</td>
                </tr>
                <tr>
                    <td>6.5.1.20</td>
                    <td>January 16, 2017</td>
                    <td>General release</td>
                </tr>
            </tbody>
        </table>
    </body>
</html>